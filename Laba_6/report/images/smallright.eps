%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 1887 654
%%Creator: yExport 1.5
%%Producer: org.freehep.graphicsio.ps.EPSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Saturday, December 21, 2024, 1:37:52â€¯AM Moscow Standard Time
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
1887 654 setpagesize
0 0 0 0 setmargins
0 0 setorigin
1887 654 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1887.00 0.00000 l
1887.00 654.000 l
0.00000 654.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
1887.00 0.00000 l
1887.00 654.000 l
0.00000 654.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
0 0 1887 654 rc
q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 -1263.00 -210.000 ] concat
1.00000 1.00000 1.00000 RG
newpath
1263.00 210.000 m
3150.00 210.000 l
3150.00 864.000 l
1263.00 864.000 l
1263.00 210.000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -1263.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -1263.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -1263.00 -210.000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
1812.00 300.000 m
1812.00 339.765 1779.76 372.000 1740.00 372.000  c
1700.24 372.000 1668.00 339.765 1668.00 300.000  c
1668.00 260.235 1700.24 228.000 1740.00 228.000  c
1779.76 228.000 1812.00 260.235 1812.00 300.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1812.00 300.000 m
1812.00 339.765 1779.76 372.000 1740.00 372.000  c
1700.24 372.000 1668.00 339.765 1668.00 300.000  c
1668.00 260.235 1700.24 228.000 1740.00 228.000  c
1779.76 228.000 1812.00 260.235 1812.00 300.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1737.41 300.805 m
1734.30 300.242 l
1734.64 298.992 1735.24 298.071 1736.09 297.477  c
1736.95 296.873 1738.22 296.571 1739.91 296.571  c
1741.44 296.571 1742.58 296.753 1743.33 297.117  c
1744.08 297.472 1744.61 297.930 1744.91 298.492  c
1745.21 299.045 1745.36 300.065 1745.36 301.555  c
1745.33 305.555 l
1745.33 306.701 1745.38 307.545 1745.49 308.086  c
1745.60 308.628 1745.81 309.206 1746.11 309.821  c
1742.72 309.821 l
1742.63 309.591 1742.52 309.253 1742.39 308.805  c
1742.33 308.607 1742.29 308.472 1742.27 308.399  c
1741.68 308.972 1741.05 309.404 1740.38 309.696  c
1739.71 309.977 1739.00 310.117 1738.25 310.117  c
1736.92 310.117 1735.87 309.758 1735.09 309.039  c
1734.32 308.310 1733.94 307.388 1733.94 306.274  c
1733.94 305.545 1734.11 304.893 1734.45 304.321  c
1734.81 303.748 1735.30 303.310 1735.92 303.008  c
1736.56 302.696 1737.47 302.425 1738.66 302.196  c
1740.26 301.904 1741.38 301.628 1742.00 301.367  c
1742.00 301.024 l
1742.00 300.357 1741.83 299.888 1741.50 299.617  c
1741.18 299.336 1740.56 299.196 1739.66 299.196  c
1739.05 299.196 1738.58 299.315 1738.24 299.555  c
1737.89 299.795 1737.62 300.211 1737.41 300.805  c
h
1742.00 303.602 m
1741.55 303.748 1740.86 303.925 1739.91 304.133  c
1738.96 304.331 1738.34 304.524 1738.05 304.711  c
1737.60 305.034 1737.38 305.440 1737.38 305.930  c
1737.38 306.409 1737.55 306.826 1737.91 307.180  c
1738.26 307.524 1738.71 307.696 1739.27 307.696  c
1739.89 307.696 1740.49 307.492 1741.05 307.086  c
1741.46 306.774 1741.74 306.393 1741.86 305.946  c
1741.95 305.654 1742.00 305.097 1742.00 304.274  c
1742.00 303.602 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1572.00 510.000 m
1572.00 549.765 1539.76 582.000 1500.00 582.000  c
1460.24 582.000 1428.00 549.765 1428.00 510.000  c
1428.00 470.235 1460.24 438.000 1500.00 438.000  c
1539.76 438.000 1572.00 470.235 1572.00 510.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1572.00 510.000 m
1572.00 549.765 1539.76 582.000 1500.00 582.000  c
1460.24 582.000 1428.00 549.765 1428.00 510.000  c
1428.00 470.235 1460.24 438.000 1500.00 438.000  c
1539.76 438.000 1572.00 470.235 1572.00 510.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1494.01 519.821 m
1494.01 501.930 l
1497.44 501.930 l
1497.44 508.367 l
1498.51 507.170 1499.76 506.571 1501.21 506.571  c
1502.78 506.571 1504.08 507.143 1505.11 508.289  c
1506.16 509.425 1506.68 511.065 1506.68 513.211  c
1506.68 515.420 1506.15 517.123 1505.08 518.321  c
1504.03 519.518 1502.76 520.117 1501.26 520.117  c
1500.52 520.117 1499.78 519.935 1499.05 519.571  c
1498.33 519.196 1497.71 518.643 1497.19 517.914  c
1497.19 519.821 l
1494.01 519.821 l
h
1497.41 513.055 m
1497.41 514.399 1497.62 515.393 1498.05 516.039  c
1498.65 516.946 1499.44 517.399 1500.43 517.399  c
1501.18 517.399 1501.82 517.076 1502.35 516.430  c
1502.89 515.784 1503.16 514.763 1503.16 513.367  c
1503.16 511.888 1502.89 510.826 1502.35 510.180  c
1501.82 509.524 1501.13 509.196 1500.29 509.196  c
1499.46 509.196 1498.78 509.513 1498.22 510.149  c
1497.68 510.784 1497.41 511.753 1497.41 513.055  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1292.40 651.000 m
1422.00 651.000 l
1407.60 849.000 l
1278.00 849.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1292.40 651.000 m
1422.00 651.000 l
1407.60 849.000 l
1278.00 849.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1344.29 759.821 m
1344.29 742.071 l
1347.90 742.071 l
1347.90 756.805 l
1356.88 756.805 l
1356.88 759.821 l
1344.29 759.821 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1592.40 651.000 m
1722.00 651.000 l
1707.60 849.000 l
1578.00 849.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1592.40 651.000 m
1722.00 651.000 l
1707.60 849.000 l
1578.00 849.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1654.24 753.242 m
1657.74 754.352 l
1657.21 756.300 1656.32 757.753 1655.07 758.711  c
1653.82 759.659 1652.23 760.133 1650.32 760.133  c
1647.94 760.133 1645.99 759.321 1644.46 757.696  c
1642.93 756.071 1642.16 753.847 1642.16 751.024  c
1642.16 748.055 1642.93 745.748 1644.46 744.102  c
1646.00 742.446 1648.02 741.617 1650.54 741.617  c
1652.72 741.617 1654.50 742.263 1655.86 743.555  c
1656.68 744.326 1657.29 745.425 1657.69 746.852  c
1654.11 747.711 l
1653.91 746.784 1653.46 746.055 1652.79 745.524  c
1652.12 744.982 1651.31 744.711 1650.35 744.711  c
1649.02 744.711 1647.95 745.190 1647.11 746.149  c
1646.29 747.097 1645.88 748.633 1645.88 750.758  c
1645.88 753.018 1646.29 754.633 1647.10 755.602  c
1647.91 756.560 1648.97 757.039 1650.27 757.039  c
1651.24 757.039 1652.07 756.737 1652.75 756.133  c
1653.44 755.518 1653.94 754.555 1654.24 753.242  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
1848.00 438.000 m
1977.60 438.000 l
1992.00 636.000 l
1862.40 636.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
1848.00 438.000 m
1977.60 438.000 l
1992.00 636.000 l
1862.40 636.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
1912.80 546.821 m
1912.80 528.930 l
1920.41 528.930 l
1922.33 528.930 1923.72 529.091 1924.58 529.414  c
1925.45 529.727 1926.14 530.295 1926.66 531.117  c
1927.18 531.940 1927.44 532.883 1927.44 533.946  c
1927.44 535.289 1927.05 536.399 1926.25 537.274  c
1925.46 538.149 1924.29 538.701 1922.72 538.930  c
1923.50 539.378 1924.14 539.878 1924.64 540.430  c
1925.16 540.972 1925.84 541.940 1926.71 543.336  c
1928.89 546.821 l
1924.57 546.821 l
1921.96 542.930 l
1921.03 541.534 1920.39 540.659 1920.05 540.305  c
1919.71 539.940 1919.34 539.690 1918.96 539.555  c
1918.58 539.420 1917.98 539.352 1917.14 539.352  c
1916.41 539.352 l
1916.41 546.821 l
1912.80 546.821 l
h
1916.41 536.492 m
1919.10 536.492 l
1920.83 536.492 1921.91 536.420 1922.33 536.274  c
1922.77 536.128 1923.11 535.878 1923.35 535.524  c
1923.60 535.159 1923.72 534.711 1923.72 534.180  c
1923.72 533.576 1923.56 533.091 1923.24 532.727  c
1922.92 532.352 1922.46 532.112 1921.88 532.008  c
1921.59 531.966 1920.71 531.946 1919.24 531.946  c
1916.41 531.946 l
1916.41 536.492 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
2802.00 297.000 m
2802.00 336.765 2769.76 369.000 2730.00 369.000  c
2690.24 369.000 2658.00 336.765 2658.00 297.000  c
2658.00 257.235 2690.24 225.000 2730.00 225.000  c
2769.76 225.000 2802.00 257.235 2802.00 297.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
2802.00 297.000 m
2802.00 336.765 2769.76 369.000 2730.00 369.000  c
2690.24 369.000 2658.00 336.765 2658.00 297.000  c
2658.00 257.235 2690.24 225.000 2730.00 225.000  c
2769.76 225.000 2802.00 257.235 2802.00 297.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
2724.01 306.821 m
2724.01 288.930 l
2727.44 288.930 l
2727.44 295.367 l
2728.51 294.170 2729.76 293.571 2731.21 293.571  c
2732.78 293.571 2734.08 294.143 2735.11 295.289  c
2736.16 296.425 2736.68 298.065 2736.68 300.211  c
2736.68 302.420 2736.15 304.123 2735.08 305.321  c
2734.03 306.518 2732.76 307.117 2731.26 307.117  c
2730.52 307.117 2729.78 306.935 2729.05 306.571  c
2728.33 306.196 2727.71 305.643 2727.19 304.914  c
2727.19 306.821 l
2724.01 306.821 l
h
2727.41 300.055 m
2727.41 301.399 2727.62 302.393 2728.05 303.039  c
2728.65 303.946 2729.44 304.399 2730.43 304.399  c
2731.18 304.399 2731.82 304.076 2732.35 303.430  c
2732.89 302.784 2733.16 301.763 2733.16 300.367  c
2733.16 298.888 2732.89 297.826 2732.35 297.180  c
2731.82 296.524 2731.13 296.196 2730.29 296.196  c
2729.46 296.196 2728.78 296.513 2728.22 297.149  c
2727.68 297.784 2727.41 298.753 2727.41 300.055  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
2495.40 438.000 m
2625.00 438.000 l
2610.60 636.000 l
2481.00 636.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
2495.40 438.000 m
2625.00 438.000 l
2610.60 636.000 l
2481.00 636.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
2547.29 546.821 m
2547.29 529.071 l
2550.90 529.071 l
2550.90 543.805 l
2559.88 543.805 l
2559.88 546.821 l
2547.29 546.821 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
2985.00 510.000 m
2985.00 549.765 2952.76 582.000 2913.00 582.000  c
2873.24 582.000 2841.00 549.765 2841.00 510.000  c
2841.00 470.235 2873.24 438.000 2913.00 438.000  c
2952.76 438.000 2985.00 470.235 2985.00 510.000  c
h
f
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
2985.00 510.000 m
2985.00 549.765 2952.76 582.000 2913.00 582.000  c
2873.24 582.000 2841.00 549.765 2841.00 510.000  c
2841.00 470.235 2873.24 438.000 2913.00 438.000  c
2952.76 438.000 2985.00 470.235 2985.00 510.000  c
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
2910.41 510.805 m
2907.30 510.242 l
2907.64 508.992 2908.24 508.071 2909.09 507.477  c
2909.95 506.873 2911.22 506.571 2912.91 506.571  c
2914.44 506.571 2915.58 506.753 2916.33 507.117  c
2917.08 507.472 2917.61 507.930 2917.91 508.492  c
2918.21 509.045 2918.36 510.065 2918.36 511.555  c
2918.33 515.555 l
2918.33 516.701 2918.38 517.545 2918.49 518.086  c
2918.60 518.628 2918.81 519.206 2919.11 519.821  c
2915.72 519.821 l
2915.63 519.591 2915.52 519.253 2915.39 518.805  c
2915.33 518.607 2915.29 518.472 2915.27 518.399  c
2914.68 518.972 2914.05 519.404 2913.38 519.696  c
2912.71 519.977 2912.00 520.117 2911.25 520.117  c
2909.92 520.117 2908.87 519.758 2908.09 519.039  c
2907.32 518.310 2906.94 517.388 2906.94 516.274  c
2906.94 515.545 2907.11 514.893 2907.45 514.321  c
2907.81 513.748 2908.30 513.310 2908.92 513.008  c
2909.56 512.696 2910.47 512.425 2911.66 512.196  c
2913.26 511.904 2914.38 511.628 2915.00 511.367  c
2915.00 511.024 l
2915.00 510.357 2914.83 509.888 2914.50 509.617  c
2914.18 509.336 2913.56 509.196 2912.66 509.196  c
2912.05 509.196 2911.58 509.315 2911.24 509.555  c
2910.89 509.795 2910.62 510.211 2910.41 510.805  c
h
2915.00 513.602 m
2914.55 513.748 2913.86 513.925 2912.91 514.133  c
2911.96 514.331 2911.34 514.524 2911.05 514.711  c
2910.60 515.034 2910.38 515.440 2910.38 515.930  c
2910.38 516.409 2910.55 516.826 2910.91 517.180  c
2911.26 517.524 2911.71 517.696 2912.27 517.696  c
2912.89 517.696 2913.49 517.492 2914.05 517.086  c
2914.46 516.774 2914.74 516.393 2914.86 515.946  c
2914.95 515.654 2915.00 515.097 2915.00 514.274  c
2915.00 513.602 l
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
2705.40 651.000 m
2835.00 651.000 l
2820.60 849.000 l
2691.00 849.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
2705.40 651.000 m
2835.00 651.000 l
2820.60 849.000 l
2691.00 849.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
2767.24 753.242 m
2770.74 754.352 l
2770.21 756.300 2769.32 757.753 2768.07 758.711  c
2766.82 759.659 2765.23 760.133 2763.32 760.133  c
2760.94 760.133 2758.99 759.321 2757.46 757.696  c
2755.93 756.071 2755.16 753.847 2755.16 751.024  c
2755.16 748.055 2755.93 745.748 2757.46 744.102  c
2759.00 742.446 2761.02 741.617 2763.54 741.617  c
2765.72 741.617 2767.50 742.263 2768.86 743.555  c
2769.68 744.326 2770.29 745.425 2770.69 746.852  c
2767.11 747.711 l
2766.91 746.784 2766.46 746.055 2765.79 745.524  c
2765.12 744.982 2764.31 744.711 2763.35 744.711  c
2762.02 744.711 2760.95 745.190 2760.11 746.149  c
2759.29 747.097 2758.88 748.633 2758.88 750.758  c
2758.88 753.018 2759.29 754.633 2760.10 755.602  c
2760.91 756.560 2761.97 757.039 2763.27 757.039  c
2764.24 757.039 2765.07 756.737 2765.75 756.133  c
2766.44 755.518 2766.94 754.555 2767.24 753.242  c
h
f
2 J
10.0000 M
1.00000 1.00000 1.00000 RG
newpath
2991.00 651.000 m
3120.60 651.000 l
3135.00 849.000 l
3005.40 849.000 l
h
f*
0 J
1.45000 M
0.00000 0.00000 0.00000 RG
newpath
2991.00 651.000 m
3120.60 651.000 l
3135.00 849.000 l
3005.40 849.000 l
h
S
2 J
10.0000 M
0 J
1.45000 M
newpath
3055.80 759.821 m
3055.80 741.930 l
3063.41 741.930 l
3065.33 741.930 3066.72 742.091 3067.58 742.414  c
3068.45 742.727 3069.14 743.295 3069.66 744.117  c
3070.18 744.940 3070.44 745.883 3070.44 746.946  c
3070.44 748.289 3070.05 749.399 3069.25 750.274  c
3068.46 751.149 3067.29 751.701 3065.72 751.930  c
3066.50 752.378 3067.14 752.878 3067.64 753.430  c
3068.16 753.972 3068.84 754.940 3069.71 756.336  c
3071.89 759.821 l
3067.57 759.821 l
3064.96 755.930 l
3064.03 754.534 3063.39 753.659 3063.05 753.305  c
3062.71 752.940 3062.34 752.690 3061.96 752.555  c
3061.58 752.420 3060.98 752.352 3060.14 752.352  c
3059.41 752.352 l
3059.41 759.821 l
3055.80 759.821 l
h
3059.41 749.492 m
3062.10 749.492 l
3063.83 749.492 3064.91 749.420 3065.33 749.274  c
3065.77 749.128 3066.11 748.878 3066.35 748.524  c
3066.60 748.159 3066.72 747.711 3066.72 747.180  c
3066.72 746.576 3066.56 746.091 3066.24 745.727  c
3065.92 745.352 3065.46 745.112 3064.88 745.008  c
3064.59 744.966 3063.71 744.946 3062.24 744.946  c
3059.41 744.946 l
3059.41 749.492 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1685.81 347.412 m
1560.21 457.320 l
S
newpath
1554.19 462.588 m
1566.51 458.449 l
1560.96 456.661 l
1559.92 450.923 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1461.84 571.056 m
1416.13 644.198 l
S
newpath
1411.89 650.982 m
1422.49 643.456 l
1416.66 643.350 l
1414.01 638.156 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1541.59 568.775 m
1595.17 644.507 l
S
newpath
1599.79 651.038 m
1596.94 638.354 l
1594.60 643.691 l
1588.78 644.130 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
1783.55 357.338 m
1843.49 436.258 l
S
newpath
1848.33 442.629 m
1845.05 430.049 l
1842.88 435.462 l
1837.09 436.097 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
2687.26 354.946 m
2629.65 433.067 l
S
newpath
2624.90 439.506 m
2636.05 432.816 l
2630.24 432.263 l
2628.00 426.881 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
2118.91 537.000 m
2344.91 537.000 l
S
newpath
2352.91 537.000 m
2340.91 532.000 l
2343.91 537.000 l
2340.91 542.000 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
2776.92 351.612 m
2860.87 449.320 l
S
newpath
2866.08 455.388 m
2862.05 443.028 l
2860.21 448.561 l
2854.47 449.544 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
2874.84 571.056 m
2829.13 644.198 l
S
newpath
2824.89 650.982 m
2835.49 643.456 l
2829.66 643.350 l
2827.01 638.156 l
h
f
2 J
10.0000 M
0 J
1.45000 M
newpath
2951.16 571.056 m
2996.87 644.198 l
S
newpath
3001.11 650.982 m
2998.99 638.156 l
2996.34 643.350 l
2990.51 643.456 l
h
f
2 J
10.0000 M
Q
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore

%%Trailer
%%EOF
